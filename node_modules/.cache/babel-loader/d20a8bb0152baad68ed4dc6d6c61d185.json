{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Course\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport Textform from './components/Textform.js';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert.js';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#072d52de';\n      showAlert(\"Dark mode is Enabled\", 'success'); // document.title='TextUtils-DarkMode';\n      // setInterval(() => {\n      //   document.title='TextUtils-Update this Please';\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is Enabled\", 'danger'); // document.title='TextUtils-LightMode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextManip\",\n        aboutText: \"About Us\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Textform, {\n              heading: \"Enter the text to Analyse\",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React Course/my-app/src/App.js"],"names":["Navbar","Textform","About","React","useState","Alert","BrowserRouter","Router","Switch","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMW,SAAS,GAAG,CAACC,OAAD,EAASC,IAAT,KAAgB;AAChCH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAAEF,OADE;AAEPC,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAI;AACbL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AAED,KAHS,EAGR,IAHQ,CAAV;AAID,GATD;;AAUA,QAAMM,UAAU,GAAE,MAAI;AACpB,QAAGT,IAAI,KAAG,OAAV,EAAkB;AAChBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,WAApC;AACAT,MAAAA,SAAS,CAAC,sBAAD,EAAwB,SAAxB,CAAT,CAHgB,CAIhB;AACA;AACA;AACA;AACD,KARD,MASI;AACFH,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;AACAT,MAAAA,SAAS,CAAC,uBAAD,EAAyB,QAAzB,CAAT,CAHE,CAIF;AACD;AACF,GAhBD;;AAiBA,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,SAAS,EAAC,UAApC;AAA+C,QAAA,IAAI,EAAEJ,IAArD;AAA2D,QAAA,UAAU,EAAES;AAAvE;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACA,QAAC,MAAD;AAAA,kCACM,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEF;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADN,eAIM,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAC,2BAAlB;AAA8C,cAAA,IAAI,EAAEA,IAApD;AAA0D,cAAA,SAAS,EAAEI;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAkBD;;GAhDQL,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar.js';\nimport Textform from './components/Textform.js';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n\n    },1500);\n  }\n  const toggleMode= ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#072d52de';\n      showAlert(\"Dark mode is Enabled\",'success');\n      // document.title='TextUtils-DarkMode';\n      // setInterval(() => {\n      //   document.title='TextUtils-Update this Please';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode is Enabled\",'danger');\n      // document.title='TextUtils-LightMode';\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextManip\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n            <Textform heading=\"Enter the text to Analyse\" mode={mode} showAlert={showAlert}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}