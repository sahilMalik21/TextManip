{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Course\\\\my-app\\\\src\\\\components\\\\Textform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked \"+text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert('Converted to UpperCase', 'success');\n  };\n\n  const handleLoClick = () => {\n    // console.log(\"Uppercase was clicked \"+text);\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert('Converted to LowerCase', 'success');\n  };\n\n  const handleCleClick = () => {\n    // console.log(\"Uppercase was clicked \"+text);\n    setText(text.replace(text, \"\"));\n    props.showAlert('Clear text successfully', 'success');\n  };\n\n  const handleExtraClick = () => {\n    let newtext = text.replace(/\\s+/g, ' ').trim();\n    setText(newtext);\n    props.showAlert('Extra spaces removed successfully', 'success');\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"On change\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState(''); // text='Updated text' //wrong way to update state\n  // setText(\"new text\")  //right way to update state\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-2\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#594f86' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2 my-2\",\n        onClick: handleUpClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2 my-2\",\n        onClick: handleLoClick,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2 my-2\",\n        onClick: handleCleClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2 my-2\",\n        onClick: handleExtraClick,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manipulated Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"no. of characters are \", text.length, \" and words are \", text.split(\" \").filter(element => {\n          return element.length !== 0;\n        }).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length === 0 ? 'Enter text here to preview it' : text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Textform, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Textform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"sources":["E:/React Course/my-app/src/components/Textform.js"],"names":["React","useState","Textform","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleCleClick","replace","handleExtraClick","newtext","trim","handleOnChange","event","target","value","color","mode","heading","backgroundColor","length","split","filter","element"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick=()=>{\r\n    // console.log(\"Uppercase was clicked \"+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to UpperCase','success');\r\n  }\r\n  const handleLoClick=()=>{\r\n    // console.log(\"Uppercase was clicked \"+text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to LowerCase','success');\r\n  }\r\n  const handleCleClick=()=>{\r\n    // console.log(\"Uppercase was clicked \"+text);\r\n    setText(text.replace(text,\"\"));\r\n    props.showAlert('Clear text successfully','success');\r\n  }\r\n  const handleExtraClick=()=>{\r\n    let newtext=text.replace(/\\s+/g,' ').trim();\r\n    setText(newtext);\r\n    props.showAlert('Extra spaces removed successfully','success');\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n  const [text, setText]=useState('');\r\n  // text='Updated text' //wrong way to update state\r\n  // setText(\"new text\")  //right way to update state\r\n    return (\r\n      <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}> \r\n      <h1 className=\"mb-2\">{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'#594f86':'white',\r\n    color:props.mode==='dark'?'white':'black'}} value={text}  onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCleClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraClick}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h2>Manipulated Text</h2>\r\n      <p>no. of characters are {text.length} and words are {text.split(\" \").filter((element)=>{return element.length!==0}).length}</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length===0?'Enter text here to preview it':text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}